// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sogou/speech/auth/v1/auth.proto

package auth // import "golang.speech.sogou.com/apis/auth/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateTokenRequest struct {
	// *Required* appid applies from sogou speech official website
	Appid string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	// *Required* secret appkey of app
	Appkey string `protobuf:"bytes,2,opt,name=appkey,proto3" json:"appkey,omitempty"`
	// *Required* valid duration for this token.
	// for security reasons, this duration
	// must not greater than 10 hours
	Exp *duration.Duration `protobuf:"bytes,3,opt,name=exp,proto3" json:"exp,omitempty"`
	// *Optional* If set, token will be created with the uuid.
	// and other invokes of sogou speech services with this token will be
	// validated by the same uuid
	Uuid                 string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTokenRequest) Reset()         { *m = CreateTokenRequest{} }
func (m *CreateTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTokenRequest) ProtoMessage()    {}
func (*CreateTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_8478ea2c14dbdb87, []int{0}
}
func (m *CreateTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTokenRequest.Unmarshal(m, b)
}
func (m *CreateTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTokenRequest.Marshal(b, m, deterministic)
}
func (dst *CreateTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTokenRequest.Merge(dst, src)
}
func (m *CreateTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTokenRequest.Size(m)
}
func (m *CreateTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTokenRequest proto.InternalMessageInfo

func (m *CreateTokenRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *CreateTokenRequest) GetAppkey() string {
	if m != nil {
		return m.Appkey
	}
	return ""
}

func (m *CreateTokenRequest) GetExp() *duration.Duration {
	if m != nil {
		return m.Exp
	}
	return nil
}

func (m *CreateTokenRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type CreateTokenResponse struct {
	// token created
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// when this token begin effective
	BeginTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	// when this token will expired
	EndTime              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateTokenResponse) Reset()         { *m = CreateTokenResponse{} }
func (m *CreateTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTokenResponse) ProtoMessage()    {}
func (*CreateTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_8478ea2c14dbdb87, []int{1}
}
func (m *CreateTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTokenResponse.Unmarshal(m, b)
}
func (m *CreateTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTokenResponse.Marshal(b, m, deterministic)
}
func (dst *CreateTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTokenResponse.Merge(dst, src)
}
func (m *CreateTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTokenResponse.Size(m)
}
func (m *CreateTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTokenResponse proto.InternalMessageInfo

func (m *CreateTokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CreateTokenResponse) GetBeginTime() *timestamp.Timestamp {
	if m != nil {
		return m.BeginTime
	}
	return nil
}

func (m *CreateTokenResponse) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateTokenRequest)(nil), "sogou.speech.auth.v1.CreateTokenRequest")
	proto.RegisterType((*CreateTokenResponse)(nil), "sogou.speech.auth.v1.CreateTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	// Performs create token from appid and appkey operation. Token created by this method
	// can be used for other service which your app enables.
	// For security reasons, the number of calling create token request per minute will be limited
	// in a reasonable range due to the quota of specific app
	CreateToken(ctx context.Context, in *CreateTokenRequest, opts ...grpc.CallOption) (*CreateTokenResponse, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) CreateToken(ctx context.Context, in *CreateTokenRequest, opts ...grpc.CallOption) (*CreateTokenResponse, error) {
	out := new(CreateTokenResponse)
	err := c.cc.Invoke(ctx, "/sogou.speech.auth.v1.auth/CreateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	// Performs create token from appid and appkey operation. Token created by this method
	// can be used for other service which your app enables.
	// For security reasons, the number of calling create token request per minute will be limited
	// in a reasonable range due to the quota of specific app
	CreateToken(context.Context, *CreateTokenRequest) (*CreateTokenResponse, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_CreateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).CreateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sogou.speech.auth.v1.auth/CreateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).CreateToken(ctx, req.(*CreateTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sogou.speech.auth.v1.auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateToken",
			Handler:    _Auth_CreateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sogou/speech/auth/v1/auth.proto",
}

func init() {
	proto.RegisterFile("sogou/speech/auth/v1/auth.proto", fileDescriptor_auth_8478ea2c14dbdb87)
}

var fileDescriptor_auth_8478ea2c14dbdb87 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x4e, 0xe3, 0x30,
	0x14, 0x86, 0xe5, 0x36, 0xd3, 0x99, 0xba, 0x3b, 0x4f, 0x35, 0xca, 0x64, 0x31, 0xad, 0xba, 0x6a,
	0x35, 0x92, 0xa3, 0x14, 0xb1, 0x40, 0xac, 0x28, 0x1c, 0xa0, 0x4a, 0xab, 0x2e, 0x50, 0x25, 0xe4,
	0x34, 0x8f, 0x34, 0xb4, 0x89, 0x4d, 0x63, 0x57, 0xb0, 0xe6, 0x00, 0x9c, 0x80, 0x0d, 0x4b, 0x8e,
	0xc0, 0x11, 0x38, 0x11, 0x4b, 0x64, 0x3b, 0x91, 0x80, 0x56, 0x82, 0x95, 0xf3, 0xfc, 0x7f, 0xbf,
	0xff, 0xe7, 0x17, 0xe3, 0x4e, 0xc1, 0x13, 0xae, 0xfc, 0x42, 0x00, 0x2c, 0x96, 0x3e, 0x53, 0x72,
	0xe9, 0x6f, 0x03, 0xb3, 0x52, 0xb1, 0xe1, 0x92, 0x93, 0xb6, 0x01, 0xa8, 0x05, 0xa8, 0x11, 0xb6,
	0x81, 0xd7, 0x49, 0x38, 0x4f, 0xd6, 0xe0, 0x1b, 0x26, 0x52, 0x97, 0xbe, 0x4c, 0x33, 0x28, 0x24,
	0xcb, 0x84, 0xb5, 0x79, 0xff, 0x3e, 0x03, 0xb1, 0xda, 0x30, 0x99, 0xf2, 0xdc, 0xea, 0xbd, 0x3b,
	0x84, 0xc9, 0xe9, 0x06, 0x98, 0x84, 0x29, 0x5f, 0x41, 0x1e, 0xc2, 0xb5, 0x82, 0x42, 0x92, 0x36,
	0xfe, 0xc1, 0x84, 0x48, 0x63, 0x17, 0x75, 0x51, 0xbf, 0x19, 0xda, 0x82, 0xfc, 0xc1, 0x0d, 0x26,
	0xc4, 0x0a, 0x6e, 0xdd, 0x9a, 0xd9, 0x2e, 0x2b, 0xf2, 0x1f, 0xd7, 0xe1, 0x46, 0xb8, 0xf5, 0x2e,
	0xea, 0xb7, 0x86, 0x7f, 0xa9, 0x8d, 0xa4, 0x55, 0x24, 0x3d, 0x2b, 0x23, 0x43, 0x4d, 0x11, 0x82,
	0x1d, 0xa5, 0xd2, 0xd8, 0x75, 0xcc, 0x11, 0xe6, 0xbb, 0xf7, 0x80, 0xf0, 0xef, 0x0f, 0x5d, 0x14,
	0x82, 0xe7, 0x05, 0xe8, 0x36, 0xa4, 0xde, 0x28, 0xf3, 0x6c, 0x41, 0x8e, 0x30, 0x8e, 0x20, 0x49,
	0xf3, 0x0b, 0x7d, 0xd9, 0x32, 0xd5, 0xdb, 0x49, 0x9d, 0x56, 0x93, 0x08, 0x9b, 0x86, 0xd6, 0x35,
	0x39, 0xc4, 0xbf, 0x20, 0x8f, 0xad, 0xd1, 0xf9, 0xd2, 0xf8, 0x13, 0xf2, 0x58, 0x57, 0xc3, 0x2b,
	0xec, 0xe8, 0x89, 0x93, 0x08, 0xb7, 0xde, 0xb5, 0x49, 0xfa, 0x74, 0xdf, 0x4f, 0xa1, 0xbb, 0xf3,
	0xf4, 0x06, 0xdf, 0x20, 0xed, 0x9d, 0x47, 0xf7, 0x08, 0xbb, 0x0b, 0x9e, 0xed, 0x35, 0x8c, 0x9a,
	0x27, 0x4a, 0x2e, 0xc7, 0xba, 0xd3, 0x31, 0x3a, 0x1f, 0x24, 0x7c, 0xcd, 0xf2, 0xa4, 0x62, 0xac,
	0x61, 0xc1, 0x33, 0x9f, 0x89, 0xb4, 0xa8, 0xde, 0xd0, 0xb1, 0x5e, 0x5f, 0x11, 0x7a, 0xac, 0xd5,
	0x27, 0xe3, 0xd1, 0x53, 0xad, 0x3d, 0x31, 0xd8, 0xc4, 0x7a, 0xf4, 0x71, 0x74, 0x16, 0x3c, 0x1b,
	0xf1, 0xa5, 0x14, 0xe7, 0x56, 0x9c, 0x6b, 0x71, 0x3e, 0x0b, 0xa2, 0x86, 0x19, 0xcd, 0xc1, 0x5b,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0xdd, 0xa4, 0x1d, 0xa4, 0x02, 0x00, 0x00,
}
