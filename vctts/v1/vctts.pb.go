// Copyright 2018 Sogou Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: sogou/speech/vctts/v1/vctts.proto

package vctts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamingSynthesisConfig_AudioEncoding int32

const (
	StreamingSynthesisConfig_ENCODING_UNSPECIFIED StreamingSynthesisConfig_AudioEncoding = 0
	StreamingSynthesisConfig_LINEAR16             StreamingSynthesisConfig_AudioEncoding = 1
	StreamingSynthesisConfig_MP3                  StreamingSynthesisConfig_AudioEncoding = 2
	StreamingSynthesisConfig_SOGOU_SPEEX          StreamingSynthesisConfig_AudioEncoding = 3
)

// Enum value maps for StreamingSynthesisConfig_AudioEncoding.
var (
	StreamingSynthesisConfig_AudioEncoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "LINEAR16",
		2: "MP3",
		3: "SOGOU_SPEEX",
	}
	StreamingSynthesisConfig_AudioEncoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED": 0,
		"LINEAR16":             1,
		"MP3":                  2,
		"SOGOU_SPEEX":          3,
	}
)

func (x StreamingSynthesisConfig_AudioEncoding) Enum() *StreamingSynthesisConfig_AudioEncoding {
	p := new(StreamingSynthesisConfig_AudioEncoding)
	*p = x
	return p
}

func (x StreamingSynthesisConfig_AudioEncoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamingSynthesisConfig_AudioEncoding) Descriptor() protoreflect.EnumDescriptor {
	return file_sogou_speech_vctts_v1_vctts_proto_enumTypes[0].Descriptor()
}

func (StreamingSynthesisConfig_AudioEncoding) Type() protoreflect.EnumType {
	return &file_sogou_speech_vctts_v1_vctts_proto_enumTypes[0]
}

func (x StreamingSynthesisConfig_AudioEncoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamingSynthesisConfig_AudioEncoding.Descriptor instead.
func (StreamingSynthesisConfig_AudioEncoding) EnumDescriptor() ([]byte, []int) {
	return file_sogou_speech_vctts_v1_vctts_proto_rawDescGZIP(), []int{1, 0}
}

type StreamingSynthesisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//MUST send streaming config first.
	//
	// Types that are assignable to StreamingRequest:
	//	*StreamingSynthesisRequest_StreamingConfig
	//	*StreamingSynthesisRequest_Audio
	StreamingRequest isStreamingSynthesisRequest_StreamingRequest `protobuf_oneof:"streaming_request"`
}

func (x *StreamingSynthesisRequest) Reset() {
	*x = StreamingSynthesisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sogou_speech_vctts_v1_vctts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingSynthesisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingSynthesisRequest) ProtoMessage() {}

func (x *StreamingSynthesisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sogou_speech_vctts_v1_vctts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingSynthesisRequest.ProtoReflect.Descriptor instead.
func (*StreamingSynthesisRequest) Descriptor() ([]byte, []int) {
	return file_sogou_speech_vctts_v1_vctts_proto_rawDescGZIP(), []int{0}
}

func (m *StreamingSynthesisRequest) GetStreamingRequest() isStreamingSynthesisRequest_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (x *StreamingSynthesisRequest) GetStreamingConfig() *StreamingSynthesisConfig {
	if x, ok := x.GetStreamingRequest().(*StreamingSynthesisRequest_StreamingConfig); ok {
		return x.StreamingConfig
	}
	return nil
}

func (x *StreamingSynthesisRequest) GetAudio() []byte {
	if x, ok := x.GetStreamingRequest().(*StreamingSynthesisRequest_Audio); ok {
		return x.Audio
	}
	return nil
}

type isStreamingSynthesisRequest_StreamingRequest interface {
	isStreamingSynthesisRequest_StreamingRequest()
}

type StreamingSynthesisRequest_StreamingConfig struct {
	StreamingConfig *StreamingSynthesisConfig `protobuf:"bytes,1,opt,name=streaming_config,json=streamingConfig,proto3,oneof"`
}

type StreamingSynthesisRequest_Audio struct {
	Audio []byte `protobuf:"bytes,2,opt,name=audio,proto3,oneof"`
}

func (*StreamingSynthesisRequest_StreamingConfig) isStreamingSynthesisRequest_StreamingRequest() {}

func (*StreamingSynthesisRequest_Audio) isStreamingSynthesisRequest_StreamingRequest() {}

type StreamingSynthesisConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// specify request audio encoding, valid options: linear16 sogou_speex
	RequestEncoding StreamingSynthesisConfig_AudioEncoding `protobuf:"varint,1,opt,name=request_encoding,json=requestEncoding,proto3,enum=sogou.speech.vctts.v1.StreamingSynthesisConfig_AudioEncoding" json:"request_encoding,omitempty"`
	// specify return audio encoding, valid options: linear16 mp3
	ResponseEncoding StreamingSynthesisConfig_AudioEncoding `protobuf:"varint,2,opt,name=response_encoding,json=responseEncoding,proto3,enum=sogou.speech.vctts.v1.StreamingSynthesisConfig_AudioEncoding" json:"response_encoding,omitempty"`
	// see[language-codes](https://blog.speech.sh/language-code/)
	// for example, zh-cmn-Hans-CN
	LanguageCode string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// 0 ~ 1
	Volume float32 `protobuf:"fixed32,4,opt,name=volume,proto3" json:"volume,omitempty"`
	// 0 ~ 1
	Pitch float32 `protobuf:"fixed32,5,opt,name=pitch,proto3" json:"pitch,omitempty"`
	// the speaker name
	Speaker string `protobuf:"bytes,6,opt,name=speaker,proto3" json:"speaker,omitempty"`
	// session id
	Id string `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	// model [default|lowlatency]
	Model string `protobuf:"bytes,8,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *StreamingSynthesisConfig) Reset() {
	*x = StreamingSynthesisConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sogou_speech_vctts_v1_vctts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingSynthesisConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingSynthesisConfig) ProtoMessage() {}

func (x *StreamingSynthesisConfig) ProtoReflect() protoreflect.Message {
	mi := &file_sogou_speech_vctts_v1_vctts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingSynthesisConfig.ProtoReflect.Descriptor instead.
func (*StreamingSynthesisConfig) Descriptor() ([]byte, []int) {
	return file_sogou_speech_vctts_v1_vctts_proto_rawDescGZIP(), []int{1}
}

func (x *StreamingSynthesisConfig) GetRequestEncoding() StreamingSynthesisConfig_AudioEncoding {
	if x != nil {
		return x.RequestEncoding
	}
	return StreamingSynthesisConfig_ENCODING_UNSPECIFIED
}

func (x *StreamingSynthesisConfig) GetResponseEncoding() StreamingSynthesisConfig_AudioEncoding {
	if x != nil {
		return x.ResponseEncoding
	}
	return StreamingSynthesisConfig_ENCODING_UNSPECIFIED
}

func (x *StreamingSynthesisConfig) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *StreamingSynthesisConfig) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *StreamingSynthesisConfig) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *StreamingSynthesisConfig) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

func (x *StreamingSynthesisConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StreamingSynthesisConfig) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

type StreamingSynthesisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StreamingResponse:
	//	*StreamingSynthesisResponse_Audio
	//	*StreamingSynthesisResponse_Transcript
	StreamingResponse isStreamingSynthesisResponse_StreamingResponse `protobuf_oneof:"streaming_response"`
}

func (x *StreamingSynthesisResponse) Reset() {
	*x = StreamingSynthesisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sogou_speech_vctts_v1_vctts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingSynthesisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingSynthesisResponse) ProtoMessage() {}

func (x *StreamingSynthesisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sogou_speech_vctts_v1_vctts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingSynthesisResponse.ProtoReflect.Descriptor instead.
func (*StreamingSynthesisResponse) Descriptor() ([]byte, []int) {
	return file_sogou_speech_vctts_v1_vctts_proto_rawDescGZIP(), []int{2}
}

func (m *StreamingSynthesisResponse) GetStreamingResponse() isStreamingSynthesisResponse_StreamingResponse {
	if m != nil {
		return m.StreamingResponse
	}
	return nil
}

func (x *StreamingSynthesisResponse) GetAudio() []byte {
	if x, ok := x.GetStreamingResponse().(*StreamingSynthesisResponse_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *StreamingSynthesisResponse) GetTranscript() string {
	if x, ok := x.GetStreamingResponse().(*StreamingSynthesisResponse_Transcript); ok {
		return x.Transcript
	}
	return ""
}

type isStreamingSynthesisResponse_StreamingResponse interface {
	isStreamingSynthesisResponse_StreamingResponse()
}

type StreamingSynthesisResponse_Audio struct {
	//audio response
	Audio []byte `protobuf:"bytes,1,opt,name=audio,proto3,oneof"`
}

type StreamingSynthesisResponse_Transcript struct {
	//transcript
	Transcript string `protobuf:"bytes,2,opt,name=transcript,proto3,oneof"`
}

func (*StreamingSynthesisResponse_Audio) isStreamingSynthesisResponse_StreamingResponse() {}

func (*StreamingSynthesisResponse_Transcript) isStreamingSynthesisResponse_StreamingResponse() {}

var File_sogou_speech_vctts_v1_vctts_proto protoreflect.FileDescriptor

var file_sogou_speech_vctts_v1_vctts_proto_rawDesc = []byte{
	0x0a, 0x21, 0x73, 0x6f, 0x67, 0x6f, 0x75, 0x2f, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x2f, 0x76,
	0x63, 0x74, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x73, 0x6f, 0x67, 0x6f, 0x75, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x2e, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xa6, 0x01, 0x0a, 0x19, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x6f, 0x67, 0x6f, 0x75, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63,
	0x68, 0x2e, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x42, 0x13,
	0x0a, 0x11, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xd6, 0x03, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x68, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x67,
	0x6f, 0x75, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x2e, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x6a, 0x0a, 0x11, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x73, 0x6f, 0x67, 0x6f, 0x75, 0x2e, 0x73, 0x70,
	0x65, 0x65, 0x63, 0x68, 0x2e, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x10, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65,
	0x61, 0x6b, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x51, 0x0a, 0x0d, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x4e,
	0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x45, 0x41, 0x52, 0x31, 0x36,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x50, 0x33, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x4f, 0x47, 0x4f, 0x55, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x58, 0x10, 0x03, 0x22, 0x6c, 0x0a, 0x1a,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x12, 0x20, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x86, 0x01, 0x0a, 0x05, 0x76,
	0x63, 0x74, 0x74, 0x73, 0x12, 0x7d, 0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x12, 0x30, 0x2e, 0x73, 0x6f, 0x67,
	0x6f, 0x75, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x2e, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6e, 0x74,
	0x68, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x73,
	0x6f, 0x67, 0x6f, 0x75, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x2e, 0x76, 0x63, 0x74, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x53, 0x79,
	0x6e, 0x74, 0x68, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x95, 0x01, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x6f, 0x67, 0x6f,
	0x75, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x2e, 0x76, 0x63, 0x74, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x42, 0x0a, 0x56, 0x43, 0x54, 0x54, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2b, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x73, 0x70, 0x65, 0x65, 0x63, 0x68, 0x2e, 0x73,
	0x6f, 0x67, 0x6f, 0x75, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x76, 0x63,
	0x74, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x63, 0x74, 0x74, 0x73, 0xf8, 0x01, 0x01, 0xa2,
	0x02, 0x03, 0x53, 0x50, 0x42, 0xaa, 0x02, 0x15, 0x53, 0x6f, 0x67, 0x6f, 0x75, 0x2e, 0x53, 0x70,
	0x65, 0x65, 0x63, 0x68, 0x2e, 0x56, 0x43, 0x54, 0x54, 0x53, 0x2e, 0x56, 0x31, 0xba, 0x02, 0x03,
	0x53, 0x50, 0x42, 0xca, 0x02, 0x15, 0x53, 0x6f, 0x67, 0x6f, 0x75, 0x5c, 0x53, 0x70, 0x65, 0x65,
	0x63, 0x68, 0x5c, 0x56, 0x43, 0x54, 0x54, 0x53, 0x5c, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_sogou_speech_vctts_v1_vctts_proto_rawDescOnce sync.Once
	file_sogou_speech_vctts_v1_vctts_proto_rawDescData = file_sogou_speech_vctts_v1_vctts_proto_rawDesc
)

func file_sogou_speech_vctts_v1_vctts_proto_rawDescGZIP() []byte {
	file_sogou_speech_vctts_v1_vctts_proto_rawDescOnce.Do(func() {
		file_sogou_speech_vctts_v1_vctts_proto_rawDescData = protoimpl.X.CompressGZIP(file_sogou_speech_vctts_v1_vctts_proto_rawDescData)
	})
	return file_sogou_speech_vctts_v1_vctts_proto_rawDescData
}

var file_sogou_speech_vctts_v1_vctts_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sogou_speech_vctts_v1_vctts_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sogou_speech_vctts_v1_vctts_proto_goTypes = []interface{}{
	(StreamingSynthesisConfig_AudioEncoding)(0), // 0: sogou.speech.vctts.v1.StreamingSynthesisConfig.AudioEncoding
	(*StreamingSynthesisRequest)(nil),           // 1: sogou.speech.vctts.v1.StreamingSynthesisRequest
	(*StreamingSynthesisConfig)(nil),            // 2: sogou.speech.vctts.v1.StreamingSynthesisConfig
	(*StreamingSynthesisResponse)(nil),          // 3: sogou.speech.vctts.v1.StreamingSynthesisResponse
}
var file_sogou_speech_vctts_v1_vctts_proto_depIdxs = []int32{
	2, // 0: sogou.speech.vctts.v1.StreamingSynthesisRequest.streaming_config:type_name -> sogou.speech.vctts.v1.StreamingSynthesisConfig
	0, // 1: sogou.speech.vctts.v1.StreamingSynthesisConfig.request_encoding:type_name -> sogou.speech.vctts.v1.StreamingSynthesisConfig.AudioEncoding
	0, // 2: sogou.speech.vctts.v1.StreamingSynthesisConfig.response_encoding:type_name -> sogou.speech.vctts.v1.StreamingSynthesisConfig.AudioEncoding
	1, // 3: sogou.speech.vctts.v1.vctts.StreamingSynthesis:input_type -> sogou.speech.vctts.v1.StreamingSynthesisRequest
	3, // 4: sogou.speech.vctts.v1.vctts.StreamingSynthesis:output_type -> sogou.speech.vctts.v1.StreamingSynthesisResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sogou_speech_vctts_v1_vctts_proto_init() }
func file_sogou_speech_vctts_v1_vctts_proto_init() {
	if File_sogou_speech_vctts_v1_vctts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sogou_speech_vctts_v1_vctts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingSynthesisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sogou_speech_vctts_v1_vctts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingSynthesisConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sogou_speech_vctts_v1_vctts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingSynthesisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sogou_speech_vctts_v1_vctts_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StreamingSynthesisRequest_StreamingConfig)(nil),
		(*StreamingSynthesisRequest_Audio)(nil),
	}
	file_sogou_speech_vctts_v1_vctts_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StreamingSynthesisResponse_Audio)(nil),
		(*StreamingSynthesisResponse_Transcript)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sogou_speech_vctts_v1_vctts_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sogou_speech_vctts_v1_vctts_proto_goTypes,
		DependencyIndexes: file_sogou_speech_vctts_v1_vctts_proto_depIdxs,
		EnumInfos:         file_sogou_speech_vctts_v1_vctts_proto_enumTypes,
		MessageInfos:      file_sogou_speech_vctts_v1_vctts_proto_msgTypes,
	}.Build()
	File_sogou_speech_vctts_v1_vctts_proto = out.File
	file_sogou_speech_vctts_v1_vctts_proto_rawDesc = nil
	file_sogou_speech_vctts_v1_vctts_proto_goTypes = nil
	file_sogou_speech_vctts_v1_vctts_proto_depIdxs = nil
}
